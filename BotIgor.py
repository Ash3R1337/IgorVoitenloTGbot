import telebot
import random
import emoji
from bs4 import BeautifulSoup
import requests

bot = telebot.TeleBot('TOKEN')
keyboard1 = telebot.types.ReplyKeyboardMarkup()
keyboard1.row('–ú–æ—Ç–∏–≤–∞—Ü–∏—èüòé')
keyboard1.row('–†–∞–Ω–¥–æ–º–Ω–æ–µ B–∏–¥–µ–æ –ò–≥–∞—Ä—èüí£')
keyboard1.row('–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫—Éüé≤')
keyboard1.row('–°–ª—É—á–∞–π–Ω–∞—è –í–∏–¥–µ–æ –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –æ—Ç –ò–≥–æ—Ä—èüî•')
keyboard1.row('–ú—É–∑—ã–∫–∞ –ß—Ç–æ–±—ã –ö—Ä—É—Ç–æüé∂')
keyboard1.row('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–∞–Ω–∞–ª–∞üîç')
keyboard1.row('–°–∏–º—É–ª—è—Ç–æ—Ä –∫–∞—á–∫–∞ü•ä')
keyboard1.row('–ö–∞–Ω–∞–ª –ò–≥–æ—Ä—èüíØ')

markup = telebot.types.InlineKeyboardMarkup()
markup.add(telebot.types.InlineKeyboardButton(text='–í–∏–¥–µ–æ –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –æ—Ç –ò–≥–æ—Ä—èüî•', callback_data='—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞'))

@bot.callback_query_handler(func=lambda call: True)
def query_handler(call):
    bot.answer_callback_query(callback_query_id=call.id, text='–ü–æ–≥–Ω–∞–ª–∏!')
    answer = VideoTrIgor()
    bot.send_message(call.message.chat.id, answer)

def Motivation():
    cit = ['–¢–µ, –∫—Ç–æ –¥–æ–±–∏–≤–∞–µ—Ç—Å—è –≤—ã–¥–∞—é—â–∏—Ö—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤, –æ–±—Ä–∞—â–∞—é—Ç –≤–Ω–∏–º–∞–Ω–∏–µ –¥–∞–∂–µ –Ω–∞ —Å–∞–º—ã–µ –Ω–µ–∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ—Ç–∞–ª–∏. –û–Ω–∏ —á–∞—â–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç –º–µ–ª–∫–∏–µ, –ø–æ—á—Ç–∏ –Ω–µ–∑–∞–º–µ—Ç–Ω—ã–µ, –Ω–æ –≤–µ—Ä–Ω—ã–µ –±—ã—Ç–æ–≤—ã–µ —Ä–µ—à–µ–Ω–∏—è. –ö–∞–∂–¥—ã–π –¥–µ–Ω—å. –î–µ–ª–æ –Ω–µ –≤ —Ç–∞–ª–∞–Ω—Ç–µ, –ø—Ä–æ—Å—Ç–æ –æ–¥–Ω–∞–∂–¥—ã –æ–Ω–∏ —Ä–µ—à–∏–ª–∏ –ø–æ—Å—Ç—É–ø–∞—Ç—å –∏–º–µ–Ω–Ω–æ —Ç–∞–∫. –í—ã–±–∏—Ä–∞—Ç—å –Ω—É–∂–Ω–æ–µ.', 
    '–ï—Å–ª–∏ –±—ã –ª—é–¥–∏ –ø–æ–Ω—è–ª–∏, —á—Ç–æ —Å—Ç—Ä–∞—Ö–∏ –Ω–µ –∏–º–µ—é—Ç –Ω–∏–∫–∞–∫–æ–π —Å–≤—è–∑–∏ —Å —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å—é, –≤—Å–µ–º –∂–∏–ª–æ—Å—å –±—ã –∫—É–¥–∞ –ª—É—á—à–µ.', 
    '–ì–ª–∞–≤–Ω–æ–µ –ø—Ä–∞–≤–∏–ª–æ —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–æ–≥–æ –º—ã—à–ª–µ–Ω–∏—è –≥–ª–∞—Å–∏—Ç: —á—Ç–æ–±—ã —Ç—â–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –æ–±—ä–µ–∫—Ç, –Ω—É–∂–Ω–æ –æ—Ç –Ω–µ–≥–æ –¥–∏—Å—Ç–∞–Ω—Ü–∏—Ä–æ–≤–∞—Ç—å—Å—è.',
    '–°–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ –ø—Ä–æ–∏–≥—Ä–∞—Ç—å –≤ —Ç–æ–º, —á–µ–≥–æ –ø—Ä–µ–∂–¥–µ –Ω–µ –¥–µ–ª–∞–ª.',
    '–ú–Ω–æ–≥–∏–µ –ª—é–¥–∏ —Ç–µ—Ä–ø—è—Ç –Ω–µ—É–¥–∞—á—É —Ç–æ–ª—å–∫–æ –ø–æ—Ç–æ–º—É, —á—Ç–æ —Å–¥–∞—é—Ç—Å—è –≤ –¥–≤—É—Ö —à–∞–≥–∞—Ö –æ—Ç —É—Å–ø–µ—Ö–∞.',
    '–ñ–∏–∑–Ω—å –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ —Ç–µ—á–µ—Ç –ª–∏–Ω–µ–π–Ω–æ. –ü—Ä–æ–±–ª–µ–º—ã –Ω–µ–∏–∑–±–µ–∂–Ω—ã, –≤–æ–ø—Ä–æ—Å –≤ —Ç–æ–º, –∫–∞–∫ –º—ã –∏—Ö –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞–µ–º –∏–ª–∏ —Å –Ω–∏–º–∏ —Å–ø—Ä–∞–≤–ª—è–µ–º—Å—è.',
    '–ù–µ –Ω–∞—á–∞–≤ –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å, —Ç—ã –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ –ø–æ—Ç–µ—Ä–ø–∏—à—å –Ω–µ—É–¥–∞—á—É.',
    '–ï—Å–ª–∏ —Ç—ã –≤—ã–ø–æ–ª–Ω—è–µ—à—å —Å–≤–æ–∏ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏, —Ç–æ —ç–≥–æ–∏–∑–º–æ–º —Å —Ç–≤–æ–µ–π —Å—Ç–æ—Ä–æ–Ω—ã –±—É–¥–µ—Ç –∫–∞–∫ —Ä–∞–∑ –Ω–µ –¥–µ–ª–∞—Ç—å —Ç–æ, —á—Ç–æ –¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–µ–±–µ —Ä–∞–¥–æ—Å—Ç—å, –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å —Å–≤–æ–π —Ç–∞–ª–∞–Ω—Ç.',
    '–ü–æ–¥–Ω–∏–º–∏ –ø–ª–∞–Ω–∫—É. –î–µ–ª–∞–π —Ç–æ, –Ω–∞ —á—Ç–æ —Ç—ã –≤—Ä–æ–¥–µ –±—ã –Ω–µ —Å–ø–æ—Å–æ–±–µ–Ω. –ù–µ –∑–∞–¥—É–º—ã–≤–∞–π—Å—è –æ –ø—Ä–µ–¥–µ–ª–µ —Å–≤–æ–∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π. –î–µ–ª–∞–π —Ç–æ, —á–µ–≥–æ —Å–¥–µ–ª–∞—Ç—å –Ω–µ –º–æ–∂–µ—à—å.',
    '–ï—Å–ª–∏ —Ç—ã –∑–∞–¥–∞—à—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–æ–ø—Ä–æ—Å, —Ç–æ –ø–æ–ª—É—á–∏—à—å –≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç.',
    '–ù–û–í–ê–Ø –∏–¥–µ—è –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ–π, –≥–ª—É–ø–æ–π –∏–ª–∏ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –≥–ª—É–ø–æ–π –∏ –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ–π. –ù–µ–ª—å–∑—è —Å—É–¥–∏—Ç—å –æ –Ω–µ–π –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é. –ï–µ –Ω—É–∂–Ω–æ –≤–æ–ø–ª–æ—Ç–∏—Ç—å.',
    '–ù–µ –æ—à–∏–±–∞–µ—Ç—Å—è —Ç–æ—Ç, –∫—Ç–æ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ—Ç. –¢–æ–º–∞—Å –≠–¥–∏—Å–æ–Ω —Å–∫–∞–∑–∞–ª: ¬´–í–æ –≤—Å–µ—Ö 200 –ª–∞–º–ø–æ—á–∫–∞—Ö, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–ª–∏, –±—ã–ª–æ —á—Ç–æ-—Ç–æ, —á—Ç–æ —è —É—á–µ–ª –≤ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–µ¬ª.',
    '–ü–æ–ø–∞–≤ –≤ —á–µ—Ä–µ–¥—É –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤—Å–µ–≥–æ –æ–¥–Ω–æ–≥–æ —Å–¥–≤–∏–≥–∞ –≤ —Å–≤–æ–µ–º –ø–æ–≤–µ–¥–µ–Ω–∏–∏, —Ç—ã –≤—Å—Ç–∞–Ω–µ–Ω–µ—à—å –Ω–∞ –ø—É—Ç—å –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ —Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏—è.',
    '–ò—Å–∫—É—Å—Å—Ç–≤–æ —Ä–∞–±–æ—Ç—ã –Ω–∞–¥ —Å–æ–±–æ–π —Å—Ç—Ä–æ–∏—Ç—Å—è –Ω–µ –≤–æ–∫—Ä—É–≥ –∏–¥–µ–∞–ª–∞, –∞ –≤–æ–∫—Ä—É–≥ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤. –ò—Ö –Ω–∞–¥–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–∑–≤–µ—à–∏–≤–∞—Ç—å –∏ —Ä–∞—Å—Å—Ç–∞–≤–ª—è—Ç—å, —á—Ç–æ–±—ã –¥–æ–±–∏—Ç—å—Å—è —É—Å–ø–µ—Ö–∞, —Ç–æ–≥–¥–∞ –æ–Ω–∏ –±—É–¥—É—Ç –º–µ–Ω—è—Ç—å—Å—è –≤–º–µ—Å—Ç–µ —Å —Ç–æ–±–æ–π.',
    '–ë–µ–∑–¥–µ–π—Å—Ç–≤–∏–µ –ø–æ—Ä–æ–∂–¥–∞–µ—Ç –±–µ—Å–ø–æ–∫–æ–π—Å—Ç–≤–æ –∏ —Å—Ç—Ä–∞—Ö. –î–µ–π—Å—Ç–≤–∏–µ ‚Äî —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –∏ —Å–º–µ–ª–æ—Å—Ç—å. –ï—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å –ø–æ–±–µ–¥–∏—Ç—å —Å—Ç—Ä–∞—Ö, –Ω–µ —Å–∏–¥–∏ –¥–æ–º–∞ –∏ –Ω–µ –¥—É–º–∞–π –æ–± —ç—Ç–æ–º. –í—Å—Ç–∞–Ω—å –∏ –¥–µ–π—Å—Ç–≤—É–π.',
    '–°—É—â–µ—Å—Ç–≤—É–µ—Ç –≤—Å–µ–≥–æ –æ–¥–∏–Ω —Å–ø–æ—Å–æ–± –ø—Ä–æ–∂–∏—Ç—å –∂–∏–∑–Ω—å —Å—á–∞—Å—Ç–ª–∏–≤–æ: –∑–∞–Ω–∏–º–∞—Ç—å—Å—è —Ç–µ–º, —á—Ç–æ –Ω–µ —Ç–æ–ª—å–∫–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ, –Ω–æ –∏ –∏–º–µ–µ—Ç —Å–º—ã—Å–ª.',
    '–ó–Ω–∞–Ω–∏–µ ‚Äî —ç—Ç–æ –Ω–µ –Ω–∞–≤—ã–∫. –ù–∞–≤—ã–∫ ‚Äî —ç—Ç–æ –∑–Ω–∞–Ω–∏–µ –ø–ª—é—Å 10 000 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π.',
    '–ï—Å–ª–∏ —Ç—ã –Ω–µ –∑–Ω–∞–µ—à—å, —á–µ–≥–æ —Ö–æ—á–µ—à—å, —Ç—ã –≤ –∏—Ç–æ–≥–µ –æ—Å—Ç–∞–Ω–µ—à—å—Å—è —Å —Ç–µ–º, —á–µ–≥–æ —Ç–æ—á–Ω–æ –Ω–µ —Ö–æ—á–µ—à—å.',
    '–ß—Ç–æ–±—ã –¥–æ–π—Ç–∏ –¥–æ —Ü–µ–ª–∏, –Ω–∞–¥–æ –∏–¥—Ç–∏.',
    '–í–æ–ª–∫ - —ç—Ç–æ –Ω–µ —Ä–æ–±–æ—Ç–∞. –í–æ—Ä–∫ - —Ä–∞–±–æ—Ç–∞, –∞ –≤–æ–ª–∫ - —ç—Ç–æ —Ö–æ–¥–∏—Ç—å.',
    '–õ—É—á—à–µ –±—ã—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–º-–ø–µ—Ä–≤—ã–º, —á–µ–º –ø–µ—Ä–≤—ã–º-–ø–æ—Å–ª–µ–¥–Ω–∏–º.',
    '–ù–µ –≤–∞–∂–Ω–æ –∫—Ç–æ –≤–∞–∂–Ω–æ –∫—Ç–æ.',
    '–ö—Ä–æ–≤—å —É —Ç–µ–±—è –≤ –∫—Ä–æ–≤–∏.',
    '–ù–µ —Å–ª—É—à–∞–π —Ç–µ—Ö, –∫—Ç–æ –º–Ω–æ–≥–æ –æ–±–µ—â–∞—é—Ç, –æ–Ω–∏ –æ–±—ã—á–Ω–æ, –º–Ω–æ–≥–æ –æ–±–µ—â–∞—é—Ç.',
    '–ù–∞—Å—Ç–æ—è—â–∏–π –æ—Ç–µ—Ü - –º–∞—Ç—å, –±—Ä–∞—Ç, —Ç—Ä—é—Ä–æ–¥–Ω—ã–π –¥–µ–¥.',
    '–°–∏–ª—å–Ω—ã–π –Ω–µ —Ç–æ—Ç, –∫—Ç–æ —Å–∏–ª—å–Ω—ã–π, –∞ —Ç–æ—Ç, –∫—Ç–æ —Å–∏–ª—å–Ω—ã–π.']
    result = random.choice(cit)
    return result

def VideoIgor():
    with open('videos.txt', 'rb') as f:
        f = random.choice(list(open('videos.txt')))
        return f

def VideoTrIgor():
    with open('TRvideos.txt', 'rb') as f:
        f = random.choice(list(open('TRvideos.txt')))
        return f

#–ì–µ–Ω. —Ç—Ä–µ–Ω–∏
def PushUps():
    Push = ['10', '15', '20', '30', '40', '50']
    Reps = ['1', '2', '3', '4']
    pRan = random.choice(Push)
    Rran = random.choice(Reps)
    result = '–ì—Ä—É–¥—å.\n–û—Ç–∂–∏–º–∞–Ω–∏—è - {0} —Ä–∞–∑, –ø–æ {1} –ø–æ–¥—Ö–æ–¥–∞\n'.format(pRan, Rran)
    if (Rran == '1'):
        return '–ì—Ä—É–¥—å.\n–û—Ç–∂–∏–º–∞–Ω–∏—è - {0} —Ä–∞–∑, {1} –ø–æ–¥—Ö–æ–¥\n'.format(pRan, Rran)
    return result

def Should():
    Style = ['–ê—Ä–º–µ–π—Å–∫–∏–µ –æ—Ç–∂–∏–º–∞–Ω–∏—è 120¬∞', '–ê—Ä–º–µ–π—Å–∫–∏–µ –æ—Ç–∂–∏–º–∞–Ω–∏—è 90¬∞', '–û—Ç–∂–∏–º–∞–Ω–∏—è –Ω–∞ —Ä—É–∫–∞—Ö —É —Å—Ç–µ–Ω—ã']
    Count = ['5', '10', '15', '20']
    Reps = ['1', '2', '3', '4']
    sRan = random.choice(Style)
    cRan = random.choice(Count)
    Rran = random.choice(Reps)
    result = '–ü–ª–µ—á–∏.\n{0} - {1} —Ä–∞–∑, –ø–æ {2} –ø–æ–¥—Ö–æ–¥–∞\n'.format(sRan, cRan, Rran)
    if (Rran == '1'):
        return '–ü–ª–µ—á–∏.\n{0} - {1} —Ä–∞–∑, {2} –ø–æ–¥—Ö–æ–¥\n'.format(sRan, cRan, Rran)
    return result

def Triceps():
    Style = ['–î—Ä–∞–∫–æ–Ω', '–û—Ç–∂–∏–º–∞–Ω–∏—è —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫', '–û—Ç–∂–∏–º–∞–Ω–∏—è —É —Å–∫–∞–º—å–∏']
    Count = ['10', '15', '20', '30', '40', '50']
    Reps = ['1', '2', '3', '4']
    sRan = random.choice(Style)
    cRan = random.choice(Count)
    Rran = random.choice(Reps)
    result = '–¢—Ä–∏—Ü–µ–ø—Å.\n{0} - {1} —Ä–∞–∑, –ø–æ {2} –ø–æ–¥—Ö–æ–¥–∞\n'.format(sRan, cRan, Rran)
    if (Rran == '1'):
        return '–¢—Ä–∏—Ü–µ–ø—Å.\n{0} - {1} —Ä–∞–∑, {2} –ø–æ–¥—Ö–æ–¥\n'.format(sRan, cRan, Rran)
    return result

def Press():
    Style = ['–í–µ–ª–æ—Å–∏–ø–µ–¥', '–ü–æ–¥—ä–µ–º –Ω–æ–≥', '–ü–æ–¥—ä–µ–º—ã –Ω–æ–≥ —Å —Ç–∞–∑–æ–º', '–ù–æ–∂–Ω–∏—Ü—ã', '–ü–ª–∞–Ω–∫–∞']
    Plank = ['1 –º–∏–Ω.', '1:30 –º–∏–Ω.', '2 –º–∏–Ω.', '2:30 –º–∏–Ω.','3 –º–∏–Ω.', '3:30 –º–∏–Ω.', '4 –º–∏–Ω.', '4:30 –º–∏–Ω.', '5 –º–∏–Ω.']
    Count = ['10', '15', '20', '30', '40', '50']
    Reps = ['1', '2', '3', '4']
    pRan = random.choice(Plank)
    sRan = random.choice(Style)
    cRan = random.choice(Count)
    Rran = random.choice(Reps)
    result = '–ü—Ä–µ—Å—Å.\n{0} - {1} —Ä–∞–∑, –ø–æ {2} –ø–æ–¥—Ö–æ–¥–∞\n'.format(sRan, cRan, Rran)
    if (Rran == '1'):
        return '–ü—Ä–µ—Å—Å.\n{0} - {1} —Ä–∞–∑, {2} –ø–æ–¥—Ö–æ–¥\n'.format(sRan, cRan, Rran)
    elif (sRan == '–ü–ª–∞–Ω–∫–∞'):
        return '–ü—Ä–µ—Å—Å.\n{0}, {1}\n'.format(sRan, pRan)
    elif (sRan == '–ü–ª–∞–Ω–∫–∞' and Rran == '1'):
        return '–ü—Ä–µ—Å—Å.\n{0}, {1}\n'.format(sRan, pRan)
    return result

def Legs():
    Style = ['–ü–∏—Å—Ç–æ–ª–µ—Ç–∏–∫', '–ë–æ–ª–≥–∞—Ä—Å–∫–∏–µ –ø—Ä–∏—Å–µ–¥–∞–Ω–∏—è', '–ü–∏—Å—Ç–æ–ª–µ—Ç–∏–∫ —Å –æ–ø–æ—Ä–æ–π', '–ú–æ—Å—Ç —Å–æ —Å—Ç—É–ª–∞ —Å –¥–≤—É—Ö –Ω–æ–≥']
    StyleTwo = ['–í—ã–ø—Ä—ã–≥–∏–≤–∞–Ω–∏—è', '–í—ã–ø—Ä—ã–≥–∏–≤–∞–Ω–∏—è —Å –ø–æ–¥–Ω—è—Ç–∏–µ–º –∫–æ–ª–µ–Ω–µ–π', '–ü–æ–¥—ä–µ–º—ã –≥–æ–ª–µ–Ω–∏ –Ω–∞ –æ–¥–Ω–æ–π –Ω–æ–≥–µ']
    Count = ['5', '10', '12', '15']
    TCount = ['10', '15', '20', '25', '30', '35', '40', '50']
    Reps = ['1', '2', '3', '4']
    stRan = random.choice(StyleTwo)
    ctRan = random.choice(TCount)
    rtRan = random.choice(Reps)
    sRan = random.choice(Style)
    cRan = random.choice(Count)
    Rran = random.choice(Reps)
    result = '–ù–æ–≥–∏.\n{0} - {1} —Ä–∞–∑, –ø–æ {2} –ø–æ–¥—Ö–æ–¥–∞.\n{3} - {4} —Ä–∞–∑, –ø–æ {5} –ø–æ–¥—Ö–æ–¥–∞'.format(sRan, cRan, Rran, stRan, ctRan, rtRan)
    if (Rran == '1'):
        return '–ù–æ–≥–∏.\n{0} - {1} —Ä–∞–∑, {2} –ø–æ–¥—Ö–æ–¥.\n{3} - {4} —Ä–∞–∑, –ø–æ {5} –ø–æ–¥—Ö–æ–¥–∞'.format(sRan, cRan, Rran, stRan, ctRan, rtRan)
    elif (Rran == '1' and rtRan == '1'):
        return '–ù–æ–≥–∏.\n{0} - {1} —Ä–∞–∑, {2} –ø–æ–¥—Ö–æ–¥.\n{3} - {4} —Ä–∞–∑, {5} –ø–æ–¥—Ö–æ–¥'.format(sRan, cRan, Rran, stRan, ctRan, rtRan)
    elif (rtRan == '1'):
        return '–ù–æ–≥–∏.\n{0} - {1} —Ä–∞–∑, –ø–æ {2} –ø–æ–¥—Ö–æ–¥–∞.\n{3} - {4} —Ä–∞–∑, {5} –ø–æ–¥—Ö–æ–¥'.format(sRan, cRan, Rran, stRan, ctRan, rtRan)
    return result

def Card():
    Style = ['–ë–µ—Ä–ø–∏ –±–µ–∑ –æ—Ç–∂–∏–º–∞–Ω–∏—è –∏ –ø—Ä—ã–∂–∫–∞', '–ë–µ—Ä–ø–∏ –±–µ–∑ –ø—Ä—ã–∂–∫–∞', '–ë–µ—Ä–ø–∏', '–ë–µ—Ä–ø–∏ —Å –ø–æ–¥–Ω—è—Ç–∏–µ–º –∫–æ–ª–µ–Ω–µ–π –≤ –ø—Ä—ã–∂–∫–µ', '–ë–µ—Ä–ø–∏ –∏ "–°–∫–∞–ª–æ–ª–∞–∑"', '–ë–µ—Ä–ø–∏ —Å –ø—Ä—ã–∂–∫–∞–º–∏ –î–∂–∞–º–ø–∏–Ω–≥ –î–∂–µ–∫', '–ë–µ—Ä–ø–∏ —Å –ø–æ–≤–æ—Ä–æ—Ç–æ–º –Ω–∞ 180¬∞']
    Count = ['10', '15', '20', '30', '40', '50']
    Reps = ['1', '2', '3', '4']
    sRan = random.choice(Style)
    cRan = random.choice(Count)
    Rran = random.choice(Reps)
    result = '–ö–∞—Ä–¥–∏–æ.\n{0} - {1} —Ä–∞–∑, –ø–æ {2} –ø–æ–¥—Ö–æ–¥–∞\n'.format(sRan, cRan, Rran)
    if (Rran == '1'):
        return '–ö–∞—Ä–¥–∏–æ.\n{0} - {1} —Ä–∞–∑, {2} –ø–æ–¥—Ö–æ–¥\n'.format(sRan, cRan, Rran)
    return result

#–ê–≥—Ä–∏—Ç—Å—è –Ω–∞ —á–∞—Å—Ç–æ–µ –Ω–∞–∂–∞—Ç–∏–µ "–ú–æ—Ç–∏–≤–∞—Ü–∏—è"
i_mot = ['0']
def Angry():
    return i_mot.append('0')

#–ü–∞—Ä—Å–µ—Ä —Å—Ç–∞—Ç. —Å —Å–∞–π—Ç–∞
def get_html(url):
    r = requests.get(url)    
    r.encoding = 'utf8'     
    return r.text

def get_head(html):
    soup = BeautifulSoup(html, 'lxml')
    head = soup.find('table', class_='table').find_all('b')
    heads = []
    for i in head:
       heads.append(i.string)
    return heads 

@bot.message_handler(commands=['start'])
def start_message(message):
    bot.send_message(message.chat.id, '–ó–¥–∞—Ä–æ–≤–∞ –±—Ä–∞—Ç, –≥–æ—Ç–æ–≤ –≤–∏–∑—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤–º–µ—Å—Ç–µ —Å–æ –º–Ω–æ–π –∏ —Ä–∞–±–æ—Ç–∞—Ç—å –≤—Ö–ª–∞–º–∏–Ω—É?')

@bot.message_handler(content_types=['text'])
def send_text(message):
    if message.text.lower() == '–¥–∞':
        bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, –¥—Ä—É–∂–∏—â–µ! –í—ã–±–µ—Ä–∏ —Ç–æ, —á—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –∏ –ø–æ–µ—Ö–∞–ª–∏!', reply_markup=keyboard1)
    elif message.text.lower() == '–Ω–µ—Ç':
        bot.send_sticker(message.chat.id, 'CAACAgQAAxkBAAEBE2lfFZ9M4T7PxyLwAAHLwTy0te4sHU8AAkABAAKoISEGLFI-ZqIj4G4aBA')
    elif '–º–æ—Ç–∏–≤–∞—Ü–∏—è' in message.text.lower():
        Angry()
        if (len(i_mot) == 15):
            bot.send_photo(message.chat.id, open('/image/111.jpg', 'rb'))
        elif (len(i_mot) == 20):
            bot.send_photo(message.chat.id, open('/image/222.jpg', 'rb'))
        elif (len(i_mot) == 25):
            bot.send_photo(message.chat.id, open('/image/333.jpg', 'rb'))
        elif (len(i_mot) > 30):
            bot.send_photo(message.chat.id, open('/image/444.jpg', 'rb'))
        else:
            bot.send_message(message.chat.id, Motivation())
    elif '–∫–∞–Ω–∞–ª –∏–≥–æ—Ä—è' in message.text.lower():
        bot.send_message(message.chat.id, '–ó–∞—Ö–æ–¥–∏ –µ–∂–∂–∏, –º–Ω–µ –æ—á–µ–Ω—å –Ω—É–∂–Ω–∞ —Ç–≤–æ—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞, –±—Ä–∞—Ç–∞–Ω. –¢–æ–ø–∏–º, –≤–∏–∑—É–∞–ª–∏–∑–∏—Ä—É–µ–º –∑–¥–µ—Å—å üëâ https://www.youtube.com/channel/UC7DFMwmTVwwSO2E5vs2GgQw')
        bot.send_photo(message.chat.id, open('E:/Sublime Text 3/Projects/BotPy/image/555.png', 'rb'))
    elif '–∏–≥–∞—Ä—è' in message.text.lower():
        bot.send_message(message.chat.id, VideoIgor())
    elif '—Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É' in message.text.lower():
        bot.send_message(message.chat.id, '–¢–≤–æ—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è!üí•\n---------------------------------------------------------------------\n{0}\n---------------------------------------------------------------------\n{1}\n---------------------------------------------------------------------\n{2}\n---------------------------------------------------------------------\n{3}\n---------------------------------------------------------------------\n{4}\n---------------------------------------------------------------------\n{5}\n---------------------------------------------------------------------\n –û—Ç–¥—ã—Ö –ø–µ—Ä–µ–¥ –ø–æ–¥—Ö–æ–¥–æ–º 1:30 - 2:00 –º–∏–Ω—É—Ç—ã\n–ï—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—à—å –∫–∞–∫–æ–µ-—Ç–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ, –ø—Ä–æ—Å—Ç–æ –≤–≤–æ–¥–∏ –∫–æ–º–∞–Ω–¥—É /search'.format(PushUps(), Should(), Triceps(), Press(), Legs(), Card()))
        bot.send_message(message.chat.id, '–ò–ª–∏ –≤—ã–ø–æ–ª–Ω–∏ —Å–ª—É—á–∞–π–Ω—É—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É —Å –∫–∞–Ω–∞–ª–∞üëá', reply_markup=markup)
    elif message.text.lower() == '/search':
        bot.send_message(message.chat.id, '–í—ã–π–¥–∏ –∏–∑ –∑–æ–Ω—ã –∫–æ–º—Ñ–æ—Ä—Ç–∞, –±—Ä–∞—Ç, –∏ –≥—É–≥–ª–∏ —Å–∞–º, –ø–æ—Ç–æ–º—É —á—Ç–æ –¥–∞ –µ–∂–∂–∏üí™')
    elif '–≤–∏–¥–µ–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –æ—Ç –∏–≥–æ—Ä—è' in message.text.lower():
        bot.send_message(message.chat.id, VideoTrIgor())
    elif '–º—É–∑—ã–∫–∞' in message.text.lower():
            musics = ['/musics/NEFFEX - Fight Back.mp3', 
            '/musics/NEFFEX - Never Give Up.mp3',
            '/musics/NEFFEX - Best of Me.mp3',
            '/musics/Neffex - Crown.mp3',
            '/musics/NEFFEX - Dance Again.mp3',
            '/musics/Neffex - Failure.mp3',
            '/musics/NEFFEX - Graveyard.mp3',
            '/musics/NEFFEX - Greatest.mp3',
            '/musics/NEFFEX - Play.mp3',
            '/musics/Neffex - Rumors.mp3',
            '/musics/NEFFEX - Soldier.mp3',
            '/musics/NEFFEX - Things Are Gonna Get Better.mp3',
            '/musics/NEFFEX - Unstoppable.mp3',
            '/musics/Rick-Astley-Never-Gonna-Give-You-Up.mp3']
            r = random.choice(musics)
            bot.send_document(message.chat.id, open(r, 'rb'))
    elif '—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞' in message.text.lower():
        res = get_head(get_html('https://whatstat.ru/channel/UC7DFMwmTVwwSO2E5vs2GgQw'))
        bot.send_message(message.chat.id, '–ü–æ–¥–ø–∏—Å—á–∏–∫–∏ - {0} üìà\n–ü—Ä–æ—Å–º–æ—Ç—Ä—ã - {1} üëÄ\n–í–∏–¥–µ–æ - {2} üìπ\n–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ'.format(res[0], res[1], res[2]))
    elif '—Å–∏–º—É–ª—è—Ç–æ—Ä' in message.text.lower():
        bot.send_message(message.chat.id, '–í–ø–µ—Ä—ë–¥, –∫–∞—á–∞–ª–∫–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ö–æ—á–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å–∏—Ä–æ–≤–∞—Ç—åüí™ (–ò–ª–∏ –∫–æ–º—É –ø—Ä–æ—Å—Ç–æ –ª–µ–Ω—å)\nshorturl.at/ILU27')
    else:
        bot.send_message(message.chat.id, '–ù–µ –ø–æ–Ω—è–ª —Ç–µ–±—è, –±—Ä–∞—Ç')
#
bot.polling(none_stop=True)